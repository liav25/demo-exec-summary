#!/usr/bin/env python3
"""
Setup script for Gen AI Security Report Generator
This script helps you configure the environment variables needed to run the application.
"""

import os
import getpass


def create_env_file():
    """Interactive setup to create .env file"""

    print("🔧 Gen AI Security Report Generator - Environment Setup")
    print("=" * 60)
    print("This script will help you configure the environment variables needed.")
    print("You can skip any optional fields by pressing Enter.\n")

    env_vars = {}

    # Flask Configuration
    print("📝 Flask Configuration:")
    secret_key = input("Secret Key (press Enter for default): ").strip()
    env_vars["SECRET_KEY"] = secret_key or "dev-secret-key-change-in-production"

    debug = input("Enable Debug Mode? (y/N): ").strip().lower()
    env_vars["FLASK_DEBUG"] = "true" if debug == "y" else "false"

    # OpenAI Configuration
    print("\n🤖 OpenAI Configuration (Required for AI features):")
    openai_key = getpass.getpass("OpenAI API Key (hidden input): ").strip()
    if openai_key:
        env_vars["OPENAI_API_KEY"] = openai_key
        model = input("OpenAI Model (default: gpt-4o-mini): ").strip()
        env_vars["OPENAI_MODEL"] = model or "gpt-4o-mini"
    else:
        print("⚠️  Warning: Without OpenAI API key, AI features will be disabled.")

    # Email Configuration
    print("\n📧 Email Configuration (Required for sending reports):")
    email = input("Email Address: ").strip()
    if email:
        env_vars["EMAIL_ADDRESS"] = email
        password = getpass.getpass(
            "Email Password/App Password (hidden input): "
        ).strip()
        if password:
            env_vars["EMAIL_PASSWORD"] = password

        smtp_server = input("SMTP Server (default: smtp.gmail.com): ").strip()
        env_vars["SMTP_SERVER"] = smtp_server or "smtp.gmail.com"

        smtp_port = input("SMTP Port (default: 587): ").strip()
        env_vars["SMTP_PORT"] = smtp_port or "587"
    else:
        print(
            "⚠️  Warning: Without email configuration, reports won't be sent via email."
        )

    # Company Branding
    print("\n🏢 Company Branding:")
    company_name = input("Company Name (default: SecureCorp Inc.): ").strip()
    env_vars["COMPANY_NAME"] = company_name or "SecureCorp Inc."

    # Write .env file
    env_content = []
    env_content.append("# Gen AI Security Report Generator - Environment Configuration")
    env_content.append("# Generated by setup_env.py\n")

    for key, value in env_vars.items():
        env_content.append(f"{key}={value}")

    try:
        with open(".env", "w") as f:
            f.write("\n".join(env_content))

        print("\n✅ Environment configuration saved to .env file!")
        print("\n📋 Next steps:")
        print("1. Install dependencies: pip install -r requirements.txt")
        print("2. Run the application: python app.py")
        print("3. Open your browser to: http://localhost:5000")

        if not openai_key:
            print("\n💡 To enable AI features:")
            print(
                "   - Get an OpenAI API key from: https://platform.openai.com/api-keys"
            )
            print("   - Add it to your .env file: OPENAI_API_KEY=sk-your-key-here")

        if not email:
            print("\n💡 To enable email delivery:")
            print("   - For Gmail: Enable 2FA and create an App Password")
            print("   - Add EMAIL_ADDRESS and EMAIL_PASSWORD to your .env file")

    except Exception as e:
        print(f"\n❌ Error creating .env file: {e}")
        print("Please create the .env file manually with the following content:")
        print("\n" + "\n".join(env_content))


def show_example_env():
    """Show example .env file content"""

    example_content = """# Gen AI Security Report Generator - Environment Configuration

# Flask Configuration
SECRET_KEY=your-secret-key-here-change-in-production
FLASK_DEBUG=true

# OpenAI Configuration (Required for AI-generated content)
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini

# Email Configuration (Required for sending reports)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
EMAIL_ADDRESS=your-email@gmail.com
EMAIL_PASSWORD=your-app-password-here

# Company Branding
COMPANY_NAME=SecureCorp Inc.
COMPANY_LOGO=static/images/logo.png

# Notes:
# - For Gmail, use an App Password instead of your regular password
# - Generate App Password: Google Account > Security > 2-Step Verification > App passwords
# - For other email providers, adjust SMTP_SERVER and SMTP_PORT accordingly
# - OpenAI API key is required for AI-generated summaries and insights
# - Without OpenAI key, the app will still work but with placeholder content"""

    print("📄 Example .env file content:")
    print("=" * 60)
    print(example_content)


if __name__ == "__main__":
    import sys

    if len(sys.argv) > 1 and sys.argv[1] == "--example":
        show_example_env()
    else:
        create_env_file()
